// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkHorizontalNavItem should render correctly 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Nav"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "paddingHorizontal": 16,
              "paddingVertical": 8,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with "selected" prop 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Nav"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "paddingHorizontal": 16,
              "paddingVertical": 8,
            },
            Object {
              "color": "rgb(0, 140, 168)",
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with "spaceAround" prop 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Nav"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "paddingHorizontal": 16,
              "paddingVertical": 8,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with arbitrary props 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Nav"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "paddingHorizontal": 16,
              "paddingVertical": 8,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with custom "style" prop 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Nav"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "paddingHorizontal": 16,
              "paddingVertical": 8,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
</View>
`;

exports[`iOS BpkHorizontalNavItem should support theming 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Nav"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 15,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "paddingHorizontal": 16,
              "paddingVertical": 8,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
</View>
`;
